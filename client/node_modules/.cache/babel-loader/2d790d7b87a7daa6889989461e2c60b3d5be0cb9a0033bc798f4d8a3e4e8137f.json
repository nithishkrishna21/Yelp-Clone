{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\yelp clone\\\\client\\\\src\\\\context\\\\RestaurantContext.js\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RestaurantsContext = /*#__PURE__*/createContext();\nexport const RestaurantsContextProvider = props => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [selectedRestaurant, setSelectedRestaurant] = useState([]);\n  const addRestaurants = newRestaurant => {\n    console.log(\"TO ADD\\n\", newRestaurant); // an array of JSON OBJECTS\n    console.log(\"RESULT\\n\", [...restaurants, ...newRestaurant]);\n    setRestaurants([...restaurants, ...newRestaurant]);\n  };\n  const deleteRestaurant = id => {\n    setRestaurants(restaurants.filter(restaurant => {\n      return restaurant.id !== id;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(RestaurantsContext.Provider, {\n    value: {\n      restaurants,\n      setRestaurants,\n      addRestaurants,\n      deleteRestaurant,\n      selectedRestaurant,\n      setSelectedRestaurant\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(RestaurantsContextProvider, \"V/8oNSnsTM81eY3IBLXxonJRZs4=\");\n_c = RestaurantsContextProvider;\nvar _c;\n$RefreshReg$(_c, \"RestaurantsContextProvider\");","map":{"version":3,"names":["React","useState","createContext","jsxDEV","_jsxDEV","RestaurantsContext","RestaurantsContextProvider","props","_s","restaurants","setRestaurants","selectedRestaurant","setSelectedRestaurant","addRestaurants","newRestaurant","console","log","deleteRestaurant","id","filter","restaurant","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects/yelp clone/client/src/context/RestaurantContext.js"],"sourcesContent":["import React, {useState, createContext} from 'react';\r\n\r\nexport const RestaurantsContext = createContext();\r\n\r\nexport const RestaurantsContextProvider = (props) => {\r\n\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [selectedRestaurant, setSelectedRestaurant] = useState([]);\r\n\r\n    const addRestaurants = (newRestaurant) => {\r\n        console.log(\"TO ADD\\n\", newRestaurant); // an array of JSON OBJECTS\r\n        console.log(\"RESULT\\n\", [...restaurants, ...newRestaurant]);\r\n        setRestaurants([...restaurants, ...newRestaurant]);\r\n    }\r\n\r\n    const deleteRestaurant = (id) => {\r\n        setRestaurants(restaurants.filter((restaurant) => {\r\n            return (restaurant.id !== id);\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <RestaurantsContext.Provider value={\r\n            {restaurants, setRestaurants, \r\n            addRestaurants, deleteRestaurant, \r\n            selectedRestaurant, setSelectedRestaurant}}>\r\n            {props.children}\r\n        </RestaurantsContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,aAAa,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,OAAO,MAAMC,kBAAkB,gBAAGH,aAAa,CAAC,CAAC;AAEjD,OAAO,MAAMI,0BAA0B,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEjD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhE,MAAMY,cAAc,GAAIC,aAAa,IAAK;IACtCC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,aAAa,CAAC,CAAC,CAAC;IACxCC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,CAAC,GAAGP,WAAW,EAAE,GAAGK,aAAa,CAAC,CAAC;IAC3DJ,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE,GAAGK,aAAa,CAAC,CAAC;EACtD,CAAC;EAED,MAAMG,gBAAgB,GAAIC,EAAE,IAAK;IAC7BR,cAAc,CAACD,WAAW,CAACU,MAAM,CAAEC,UAAU,IAAK;MAC9C,OAAQA,UAAU,CAACF,EAAE,KAAKA,EAAE;IAChC,CAAC,CAAC,CAAC;EACP,CAAC;EAED,oBACId,OAAA,CAACC,kBAAkB,CAACgB,QAAQ;IAACC,KAAK,EAC9B;MAACb,WAAW;MAAEC,cAAc;MAC5BG,cAAc;MAAEI,gBAAgB;MAChCN,kBAAkB;MAAEC;IAAqB,CAAE;IAAAW,QAAA,EAC1ChB,KAAK,CAACgB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEtC,CAAC;AAAAnB,EAAA,CAzBYF,0BAA0B;AAAAsB,EAAA,GAA1BtB,0BAA0B;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}